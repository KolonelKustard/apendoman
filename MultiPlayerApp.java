/*
 * MultiPlayerApp.java
 *
 * Created on 10 October 2000, 14:04
 */

import javax.swing.*;
import java.io.*;
import java.util.*;

import apendoMan.*;
import apendoMan.networking.*;

/**
 *
 * @author  Kolonel Kustard
 * @version 
 */
class getConn extends Thread {
    // Initialise global variables
    JFrame frame;
    JTextArea outputBox;
    String username;
    String serverIP;
    int gotoNextStage = -1;
    
    ConnectToServer conn;
    
    public getConn (JFrame frame, JTextArea txt, String ip, String n) {
        // Declare global variables
        this.frame = frame;
        outputBox = txt;
        serverIP = ip;
        username = n;
        NetParser netParser = new NetParser();
        
        // Try and connect to server
        try {
            outputBox.append("Trying to connect to: " + serverIP + "\n\n");
            
            // Attempts to connect to the server using external ConnectToServer thread (fingers crossed!).
            conn = new ConnectToServer(serverIP, 7879);
            
            // Sends user details to server, and ensures no disallowed characters are used...
            netParser.newOutput(NetParser.USER_ID, username);
            conn.sendData(netParser.getOutput());
            
            // Start thread up to listen for server feedback.
            start();
        }
        catch (IOException E) {
            outputBox.append("Failed to connect for the following reason:\n" + E);
        }
    }
    
    public void run () {
        Vector v = new Vector();
        Vector v2 = new Vector();
        String s = "";
        String s2 = "";
        NetParser netParser = new NetParser();
        
        while (gotoNextStage < 0) {
            s = conn.getData();
            if (s != null) {
                netParser.newInput(s);
                
                if (netParser.getInputCommand(0).equals(NetParser.PLAIN_TEXT)) {
                    outputBox.append(netParser.getInputParamString(0, 0) + "\n");
                }
                
                if (netParser.getInputCommand(0).equals(NetParser.CLIENT_NUM)) {
                    new ApendoManClient(frame, conn, netParser.getInputParamInt(0, 0));
                    gotoNextStage = 1;
                }
            }
            
            // Then make the thread sleep to avoid caning the system!
            try {
                this.sleep(10);
            }
            catch (InterruptedException e) {
                System.out.println(e);
            }
        }
    }
}

public class MultiPlayerApp extends javax.swing.JFrame {
    
    /** Creates new form MultiPlayerApp */
    public MultiPlayerApp() {
        initComponents ();
        pack ();
        this.setSize(800, 600);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jLabel1 = new javax.swing.JLabel();
        serverIP = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        readyButton = new javax.swing.JButton();
        outputBox = new javax.swing.JTextArea();
        getContentPane().setLayout(null);
        setTitle("Ralphy Multiplayer App!");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        }
        );
        
        jLabel1.setText("Please enter the IP to connect to and your name in the text fields and then press the Ready button:");
        jLabel1.setFont(new java.awt.Font ("Arial", 0, 12));
        
        getContentPane().add(jLabel1);
        jLabel1.setLocation(10, 10);
        jLabel1.setSize(jLabel1.getPreferredSize());
        
        
        
        getContentPane().add(serverIP);
        serverIP.setBounds(200, 40, 190, 30);
        
        
        
        getContentPane().add(username);
        username.setBounds(200, 80, 190, 30);
        
        
        jLabel2.setText("Server IP");
        jLabel2.setFont(new java.awt.Font ("Arial", 0, 10));
        
        getContentPane().add(jLabel2);
        jLabel2.setLocation(150, 50);
        jLabel2.setSize(jLabel2.getPreferredSize());
        
        
        jLabel3.setText("Name:");
        jLabel3.setFont(new java.awt.Font ("Arial", 0, 10));
        
        getContentPane().add(jLabel3);
        jLabel3.setLocation(160, 90);
        jLabel3.setSize(jLabel3.getPreferredSize());
        
        
        readyButton.setFont(new java.awt.Font ("Arial", 0, 10));
        readyButton.setText("Ready");
        readyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pushReadyButton(evt);
            }
        }
        );
        
        getContentPane().add(readyButton);
        readyButton.setLocation(420, 60);
        readyButton.setSize(readyButton.getPreferredSize());
        
        
        outputBox.setWrapStyleWord(true);
        outputBox.setLineWrap(true);
        outputBox.setEditable(false);
        outputBox.setFont(new java.awt.Font ("Arial", 0, 12));
        
        getContentPane().add(outputBox);
        outputBox.setBounds(60, 140, 500, 150);
        
    }//GEN-END:initComponents

  private void pushReadyButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pushReadyButton
      if (readyButton.isEnabled()) {
        new getConn (this, outputBox, serverIP.getText(), username.getText());
        readyButton.setEnabled(false);
        serverIP.setEnabled(false);
        username.setEnabled(false);
      }
  }//GEN-LAST:event_pushReadyButton

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit (0);
    }//GEN-LAST:event_exitForm

    /**
    * @param args the command line arguments
    */
    public static void main (String args[]) {
        new MultiPlayerApp ().show ();
    }


// Variables declaration - do not modify//GEN-BEGIN:variables
private javax.swing.JLabel jLabel1;
private javax.swing.JTextField serverIP;
private javax.swing.JTextField username;
private javax.swing.JLabel jLabel2;
private javax.swing.JLabel jLabel3;
private javax.swing.JButton readyButton;
private javax.swing.JTextArea outputBox;
// End of variables declaration//GEN-END:variables

}
